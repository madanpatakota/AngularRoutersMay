


ngModel -> useful for bind data
ngStyle -> useful for apply the style to the element based on the condition
ngClass -> useful for apply the class to the element based on the condition


ngIf    -> useful for wheater we have to show the element or not
ngSwitch -> contain different cases 
ngFor  -> which useful for handle the group of data




Plugbox which contains the different cases
based on the case we will get the output

Array is nothing but group of values
var Id = 1;           -> single value
var Ids = [1,2,3,4]   -> Array




  service we are using here for maintain the common data .
  for the data i am writing a function
  here function contains the array of values



  *ngFor which is the part of the angular using for looping the my array

  first loop      --> first object is going to be set
  sercond loop    -> second object is going to be set
  third loop      -> third object is going to be set



@component
@viewchild
@input
@output
@contentchild



Either add the @Injectable() decorator to 'customerorderService', or configure a different provider (such as a provider with 'useFactory').




1. Pass/send/emit the data from order component
2. want to receive/subscribe the data in customer component


app module -- > service instance is available entire the module
app component --> service instance ia availble entire all the components
xyz component -> service instance is avaible in the xyz component 

xyz is the child of the app component
app componenet is the child of the appmodule

appmodule>appcomp>xyz



Routing is nothing but the navigation. you can image url of the browser


https://github.com/issues        --- > issues page


https://locahost:4200/customers --- > customers component
----> 1. i need to import router related stuff from the package . in appmodulesection
      2. Need to assign to routing path --> component
      3. I have to sync the configuration to the appmodule section


<router-outlet></router-outlet>



http://localhost:4200/customer   ==> customer componenent 




https://github.com/pulls

https://github.com/marketplace


We can handle authentication and autherization
we can pass the params
we can control the component  ---> when component is loading in the browser 







appModule        ----approuter
100 components

RolesModule  --> 10 components   ---> roles.router   ---
ProductsModule --> 20 products   ---> products.router   ---       app.approuter
xyzModule  -->  10 compoent      ---> xyz.router   ---



1.   i have clicked more button then i have naviagated to the customer component

Task no1.
2.   i want to navigate the customer compoenet based on the current customerID
3.   because of i want to display the expected row in customer component
4.   1. Activateroute --- > which contains the params
     2. bases on the params i have applied the filter 
     3. i got the output
     4. i have disapled the data into the compoentn

Task no 2
5. whenever i am going to click the record i want to display in the same component
   i have taken routeroutlet  -> capture the component
   we need to make the realtionship b/w customers and customer -> children in the routes 
   i have updated the routerLink


Task no 3:
   here based on the requeirment i have to subscirbe params

 







/////

URL : http://localhost:4200/customers/customer/3         --Parms
http://localhost:4200/customers/customer?CustomerID=3    --queryparams
fragement : 
http://localhost:4200/customers/customer#3 -- fragment


fragment with codieng
fragmnet with html

querystring with coding
queyrsgring with html

parms with coding
params with html

routing with html  15 mins

routing       -----> in the coding part for naviation and also for init path....
activateroute ---- > for fragment , queyrstring , params subscription


template html
codieng part 




//Guard
//canactivate
//candeactivate

ng g  c <componnet>
ng g  g canActivate   ---> we  are going to write the out logic....








localhost:4200/login
{path:'login' , component:LoginComponent}

localhost:4200
{path:'' , component:LoginComponent}


params
localhost:4200/customers/1

querystring related url
localhost:4200/customers/customer?CustomerID=1

fragmenturl
localhost:4200/customers/customer#1


localhost:4200/customers/customerDetail

localhost:4200/customers
{path:'login' , component:CustomersComponent}


when ever user is trying to enter the component via routing
//then canActivate will fired


//whenever user is trying to leave the component via routing
//then deactivate wil fired




interface
it provides the set of metods 
it do't suport method implementation


i have created one interface in the canDeactiveGuard section

export customerscomponent implments canDeactivateCustoemrsComponent
i have given the reference to the customes component

becuase of i need the make the communication between guard and customerclass









